#ifndef __INTERP_H__
#define __INTERP_H__

/**
  \file
  Интерполяция данных кусочно-полиномиальными функциями

  В данном модуле содержатся функции, строящие кусочно-кубические
  интерполянты. Пусть 
  \f$x_0 < x_1 < \dots < x_{n-1}\f$
  \f$y_0 < y_1 < \dots < y_{n-1}\f$.
  Рассмотрим кусочно-кубическую функцию: 
  \f$P(x)\f$, равную кубическому полиному 
  \f$p_j(x) = a_{j0}x^3 + a_{j1}x^2 + a_{j2}x + a{j1}\f$ при \f$x_j \le x < x_{j+1}\f$
  \f$(j=0,1,\dots,n - 2)\f$. 
  
  Полином \f$p_j(x)\f$ удобно записать в виде
  \f$p_j(x)= y_j + d_j(x-x_j) +c_j(x-x_j)^2+b_j(x-x_j)\f$.
  Обратим внимание, что \f$y_j = p_j(x_j)\f$, \f$d_j = p'_j(x_j)\f$,
  \f$c_j = p''_j(x_j)/2\f$, \f$b_j = p'''_j(x_j)/6\f$.

  \f$P(x)\f$ называется </i>кубическим эрмитовым интерполянтом</i>,
  если \f$P(x)\f$ непрерывен, имеет непрерывную производную и \f$P(x_j)= y_j\f$ \f$(j=0,1,\dots,n - 1)\f$,
  иными словами, \f$p_j(x_j)=y_j\f$, \f$p_j(x_{j+1})=y_{j+1}\f$ \f$(j=0,1,\dots,n - 1)\f$, 
  \f$p'_j(x_j)=p'_{j+1}(x_j)\f$ \f$(j=0,1,\dots,n - 2)\f$. 
  Кубический эрмитов интерполянт не единственен.

  \f$P(x)\f$ называется </i>кубическим сплайном</i>,
  если \f$P(x)\f$ непрерывен, имеет непрерывные первую и вторую производные 
  и \f$P(x_j)= y_j\f$ \f$(j=0,1,\dots,n - 1)\f$,
  иными словами, \f$p_j(x_j)=y_j\f$, \f$p_j(x_{j+1})=y_{j+1}\f$ \f$(j=0,1,\dots,n - 1)\f$, 
  \f$p'_j(x_j)=p'_{j+1}(x_j)\f$ \f$(j=0,1,\dots,n - 2)\f$,
  \f$p''_j(x_j)=p''_{j+1}(x_j)\f$ \f$(j=0,1,\dots,n - 2)\f$. 
  Кубический сплайн не единственен.
*/

/**
  \example xinterp.c
*/

/**
  \example xiquad.c
*/

/**
  Кубический эрмитов интерполянт

  Функция строит кубический эрмитов интерполянт. Интерполянт удовлетворяет
  дополнительным условиям: на тех участках, где данные монотонны
  интерполянт также монотонен; узлы \f$x_j\f$, являющиеся локальными
  максимумами (минимумами), являются локальными максимумами (минимумами) и
  для интерполянта.

  - Вход:
      - \f$x\f$ (массив длины \f$n\f$) - абсциссы точек
      - \f$y\f$ (массив длины \f$n\f$) - ординаты точек
      - \f$n\f$ количество точек

  - Выход:
      - \f$b\f$ (массив длины \f$n - 1\f$) 
        \f$c\f$ (массив длины \f$n - 1\f$) 
        \f$d\f$ (массив длины \f$n\f$) - коэффициенты кубических полиномов.
        \f$d[n-1]\f$ равен значению интерполянта в точке \f$x[n-1]\f$

  Данные должны удовлетворять условиям: 
  \f$n \ge 3\f$, \f$x[j] < x[j + 1]\f$ \f$(j=0,1,\dots,n - 2)\f$.

  Трудоемкость \f$25n + O(1)\f$
*/

extern void interp_pchip(
   double *x, 
   double *y, 
   size_t n, 
   double *b, 
   double *c, 
   double *d);

/**
  Кубический сплайн

  Функция строит кубический сплайн. Сплайн удовлетворяет
  дополнительному условию: в точках \f$x_1\f$ и \f$x_{n-2}\f$ 
  он имеет непрерывную <i>третью</i> производную
  (условие запрета стыка - сплайн с эти дополнительным условием единственен).

  - Вход:
      - \f$x\f$ (массив длины \f$n\f$) - абсциссы точек
      - \f$y\f$ (массив длины \f$n\f$) - ординаты точек
      - \f$n\f$ количество точек

  - Выход:
      - \f$b\f$ (массив длины \f$n - 1\f$) 
        \f$c\f$ (массив длины \f$n - 1\f$) 
        \f$d\f$ (массив длины \f$n\f$) - коэффициенты кубических полиномов.
        \f$d[n-1]\f$ равен значению сплайна в точке \f$x[n-1]\f$

  - Рабочий массив:
      - \f$work\f$ - массив длины \f$2n\f$

  Данные должны удовлетворять условиям: 
  \f$n \ge 4\f$, \f$x[j] < x[j + 1]\f$ \f$(j=0,1,\dots,n - 2)\f$.

  Трудоемкость \f$32n + O(1)\f$
*/

extern void interp_spline(
   double *x, 
   double *y, 
   size_t n, 
   double *b, 
   double *c, 
   double *d, 
   double *work);


/**
  Вычисление значения кубического интерполянта

  Функция вычисляет значение эрмитова кубического интерполянта
  или кубического сплайна в заданной точке.

  - Вход:
      - \f$x\f$ (массив длины \f$n\f$) - абсциссы точек (узлов интерполяции)
      - \f$y\f$ (массив длины \f$n\f$) - ординаты точек (узлов интерполяции)
      - \f$b\f$ (массив длины \f$n - 1\f$) 
        \f$c\f$ (массив длины \f$n - 1\f$) 
        \f$d\f$ (массив длины \f$n\f$) - коэффициенты кубических полиномов.
        (могут быть вычислены функциями #interp_pchip или #interp_spline)
      - \f$n\f$ количество узлов интерполяции
      - \f$xx\f$ - произвольная точка

  - Выход:
      - Функция возвращает значение интерполянта в точке \f$xx\f$

  Данные должны удовлетворять условиям: 
  \f$n \ge 2\f$, \f$x[j] < x[j + 1]\f$ \f$(j=0,1,\dots,n - 2)\f$.
*/

double interp_eval(
   double *x, 
   double *y, 
   double *b, 
   double *c, 
   double *d, 
   size_t n, 
   double xx);

/**
  Вычисление значения определенного интеграла от кубического интерполянта

  Функция находит определенный интеграл от кубического интерполянта
  \f$\int_{x_1}^{x_2} P(x) dx\f$. Найденное значение является приближением
  к определенному интегралу от функции, заданной таблично значениями
  \f$x_j\f$, \f$y_j\f$

  - Вход:
      - \f$x\f$ (массив длины \f$n\f$) - абсциссы точек (узлов интерполяции)
      - \f$y\f$ (массив длины \f$n\f$) - ординаты точек (узлов интерполяции)
      - \f$b\f$ (массив длины \f$n - 1\f$) 
        \f$c\f$ (массив длины \f$n - 1\f$) 
        \f$d\f$ (массив длины \f$n\f$) - коэффициенты кубических полиномов.
        (могут быть вычислены функциями #interp_pchip или #interp_spline)
      - \f$n\f$ количество узлов интерполяции
      - \f$x1\f$ - нижний предел интегрирования
      - \f$x2\f$ - верхний предел интегрирования

  - Выход:
      - Функция возвращает значение определенного интеграла

  Точки \f$x1\f$, \f$x2\f$ могут лежать вне отрезка \f$x[0], x[n - 1]\f$.
  В этом случае относится к найденному интегралу как к приближению
  интеграла от таблично заданной функции нужно крайне предусмотрительно.

  Данные должны удовлетворять условиям: 
  \f$n \ge 2\f$, \f$x[j] < x[j + 1]\f$ \f$(j=0,1,\dots,n - 2)\f$.
*/

double interp_quad(
   double *x, 
   double *y, 
   double *b, 
   double *c, 
   double *d, 
   size_t n, 
   double x1, 
   double x2);

#endif
