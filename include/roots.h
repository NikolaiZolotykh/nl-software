#ifndef __ROOTS_H__
#define __ROOTS_H__

/**
  \file
  Решение нелинейных уравнений.
*/

/**
  \example xzero.c
*/


/**
  Решение уравнения с одним неизвестным.

  Используется комбинированный метод деления пополам (бисекции),
  секущих и обратной квадратичной интерполяции.

  - Вход:
	- \f$fun\f$ - указатель на функцию вычисляющую правую часть уравнения \f$f(x)=0\f$
	- \f$a\f$ - левый конец исходного интервала
	- \f$b\f$ - правый конец исходного интервала
	- \f$abstol\f$ - желаемая длина интервала неопределенности конечного результата

  - Выход:
	- Функция возвращает найденное решение.

  Без проверки предполагается, что на концах отрезка \f$[a, b]\f$
  функция \f$f(x)\f$ имеет разные знаки. Корень уравнения ищется в пределах допуска
  на ошибку \f$4\cdot \varepsilon_{\rm M} \cdot |x| + tol\f$,
  где \f$\varepsilon_{\rm M}\f$ - машинная точность.

  Функция является переводом фортрановской программы zeroin из книги [FMM].
*/

double roots_zero(double (*fun)(double), double a, double b, double abstol); 

#endif